1. 	controller 동작이 되지 않음
	원인 : src/main/java 경로가 com/ouneno/mybook 으로 되어있었음
	해결 : com/ouneno/mybook/controller 패키지로 생성하니 Controller 작동이 됨
	의문
	1. Controller 패키지를 왜 추가했어야 하는지?
	2. localhost:8080/(컨트롤러이름) 접속이 가능한데 url의 차이점이 무엇인지?
	
	티스토리 : https://dev-overload.tistory.com/24
	src/main/java 경로에 com.example.demo.controller 패키지를 생성하고 HomeController.java를 생성합니다.

2. 	get 방식으로 /home 요청을 받았을 때 화면에 Hello String Boot 문자열을 출력하는 컨트롤러.
	view를 반환하지 않기 때문에 시적으로 @ResponseBody 어노테이션을 사용함
	
3. HomeController에서 main.jsp를 지정해줬으나 jsp가 뜨지않음
	application.properties에서 jsp prefix, suffix 지정을 해줘야 한다 함
	
4. build.gradle 수정 후 에러
	증상 : Refresh 누른 후 콘솔창에 Could not find method compile() for arguments 출력
	원인 : Gradle 4.10 버전 이후로 compile, runtime, testCompile, testRuntime 비호환
	=> Maven Repository 사이트 들어가서 implements 새로운 버젼으로 다운
	=> 새로 Refresh gradle project 누르니 콘솔창에 build Successful 뜸

5. DashBoard 실행시 No MyBatis mapper was found in 에러 발생
	주요 원인 : *Mapper.xml 에서 namespace 명칭이나 경로, id 오타 확인
				Mapper.xml 파일 위치 제대로 명시했는지?
	실제 원인 : xml -> Dao -> Service -> ServiceImpl 명시해주니 됨
			xml과 Dao는 있었으나, Service, ServiceImpl이 없어서 이어지지 못했던듯?
			더 공부해야할 것 같다.
			
6. 	(1) Unsatisfied dependency~ 에러발생
		출력 : Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userDao'; nested exception
	(2) log4jdbc.log4j2.properties
		출력 : Loading class 'com.mysql.jdbc.Driver'. 어쩌구저쩌구 deprecated
		=> log4jdbc.driver를 설정해주지 않을 경우 deprecated가 뜬다.
	
	해결 : application.properties 상 예전 moopi 프로젝트에서 가져왔었던 dependencies에 문제가 있었던 듯 싶다.
		기존에 있었던 의존성 라이브러리 삭제 후 하단 라이브러리 추가 함
		implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
		
7. application.properties의 implementation은 implementation들 끼리 묶어놓기 => 오류발생 야기할 수 있음

8. xml의 namespace가 문제가 있었음
	=> xml의 namespace가 가르켜야 하는 곳은 VO의 위치가 아닌 Dao의 위치를 가르켜야한다.
	
9. 입력값 전송시 오류발생
	
	출력 : 	Access denied for user 'somerset'@'localhost' (using password: YES)
			com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
			
	원인 : 	SQL 아이디와 비밀번호가 일치 하지 않음
			application.properties의 spring.datasource.password={1234}로 되어져있었음
			
	해결 : 	spring.datasource.password=1234
			로 변경 후 처리 완료

10. HashMap을 사용하여 등록된 글을 DB에서 불러오고 싶은데 Dao에서 Service/ServiceImpl로 값을 불러오지 못했음
	
	출력 : Null 값만 출력
	
	원인 : ServiceImpl에서 Dao를 불러와야하는데, 자동으로 이어진줄알고 Dao명시를 하지 않음
	
	해결 : map.put("resultMap(아무거나 명시해도 됨 Key값이기때문에)",productDao.getProduct(product));
	
11. TooManyResultsException : 결과값이 너무 많다고 에러뜸
	
	Exception 해석 : DB데이터 조회시 발생하는 에러
	
	원인 : 해당 Mapper 쿼리가 조회하는 row 개수가 2개 이상이기 때문
		 
	해결 : 기존의 Mapper가 1개의 row만 받는 것으로 되어져있다면, 2개 이상의 row를 받을 수 있도록 수정해야한다.
	
	기존 : public HashMap<String, Object> getProduct(Product product) throws Exception;
	변경 : public List<HashMap<String, Object>> getProduct(Product product) throws Exception;
	=> HashMap 자체를 List로 감쌌다.