# Controller에서 호출할 뷰 페이지 검토
spring.mvc.view.prefix=/WEB-INF/main/
# Controller에서 호출할 뷰 페이지 접미사(파일확장자명)
spring.mvc.view.suffix=.jsp

# application.properties에 작성
# 서버 포트 번호
server.port=8080

# 소스파일에 변화가 있을 때 자동으로 서버 재 시작 설정
spring.devtools.restart.enabled=true

# log4jdbc.sql : log4jdbc-log4j2를 사용하고 싶은 경우
# mySQL / DB(jdbc) 관련설정 : url, username, password
spring.datasource.url=jdbc:log4jdbc:mysql://localhost:3306/somerset?characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=somerset
spring.datasource.password=1234
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy


#[추가할 설정]
#연결 여부 확인을 위한 테스트 쿼리
spring.datasource.hikari.connection-test-query=SELECT 1

# 매핑할 모델의 패키지 경로 (mybatis 매핑 type을 짧게 쓰기 위한 설정)
mybatis.type-aliases-package=com.ouneno.somerset.service.domain

# mapper.xml 위치 명시
mybatis.mapper-locations=/mapper/*.xml

# google Login API
# application.properties
# 확장성 및 보안을 위해 별도 properties에 값 지정

#OAuth2 =
# google = 
#	url = https://accounts.google.com/o/oauth2/v2/auth
#	client-id = 137777584383-hm25lph1vr3erm1jqv9rgb8cmmjl16j9.apps.googleusercontent.com 
#	callback-url = http://localhost:8080/account/auth/GOOGLE
#	scope = https://www.googleapis.com/auth/birthdays

# 구글 관련하여 properties 진행
spring.OAuth2.google.url = https://accounts.google.com/o/oauth2/v2/auth
spring.OAuth2.google.client-id = 137777584383-hm25lph1vr3erm1jqv9rgb8cmmjl16j9.apps.googleusercontent.com 
spring.OAuth2.google.callback-url = http://localhost:8080/account/auth/GOOGLE
spring.OAuth2.google.scope = https://www.googleapis.com/auth/birthdays